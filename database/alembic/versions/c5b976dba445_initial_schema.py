"""Initial schema

Revision ID: c5b976dba445
Revises: 
Create Date: 2025-04-22 10:32:44.525288

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'c5b976dba445'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('chargers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=50), nullable=False),
    sa.Column('brand', sa.String(length=50), nullable=True),
    sa.Column('box_serial_number', sa.String(length=100), nullable=True),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('location', sa.String(length=200), nullable=True),
    sa.Column('admin_status', sa.String(length=50), nullable=True),
    sa.Column('proxy_status', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_chargers_code'), 'chargers', ['code'], unique=True)
    op.create_table('log_ocpp_duplicated_ids',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('unique_id', sa.String(length=100), nullable=False),
    sa.Column('event_timestamp', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('meter_values_15min_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('meter_date', sa.DateTime(), nullable=True),
    sa.Column('meter_value', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('operators',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('password_hash', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_index(op.f('ix_operators_username'), 'operators', ['username'], unique=True)
    op.create_table('partition_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('table_name', sa.String(length=100), nullable=False),
    sa.Column('partition_start', sa.DateTime(), nullable=False),
    sa.Column('partition_end', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('connectors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('charger_id', sa.Integer(), nullable=False),
    sa.Column('connector_number', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('error_code', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['charger_id'], ['chargers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('heartbeat_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('charger_id', sa.Integer(), nullable=True),
    sa.Column('connector_id', sa.Integer(), nullable=True),
    sa.Column('reported_time', sa.DateTime(), nullable=True),
    sa.Column('received_at', sa.DateTime(), nullable=False),
    sa.Column('payload', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['charger_id'], ['chargers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('charge_transactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('charger_id', sa.Integer(), nullable=False),
    sa.Column('connector_id', sa.Integer(), nullable=False),
    sa.Column('transaction_id', sa.Integer(), nullable=True),
    sa.Column('start_time', sa.DateTime(), nullable=True),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.Column('delivered_energy', sa.Float(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('meter_start', sa.Float(), nullable=True),
    sa.Column('meter_stop', sa.Float(), nullable=True),
    sa.Column('net_energy', sa.Float(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('id_tag', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['charger_id'], ['chargers.id'], ),
    sa.ForeignKeyConstraint(['connector_id'], ['connectors.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('log_ocpp',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('charger_id', sa.Integer(), nullable=True),
    sa.Column('connector_id', sa.Integer(), nullable=True),
    sa.Column('transaction_id', sa.Integer(), nullable=True),
    sa.Column('message_type', sa.String(length=50), nullable=True),
    sa.Column('action', sa.String(length=50), nullable=True),
    sa.Column('payload', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['charger_id'], ['chargers.id'], ),
    sa.ForeignKeyConstraint(['connector_id'], ['connectors.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('log_ocpp_proxy_connection',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('charger_id', sa.Integer(), nullable=True),
    sa.Column('connector_id', sa.Integer(), nullable=True),
    sa.Column('action', sa.String(length=50), nullable=True),
    sa.Column('error_code', sa.String(length=50), nullable=True),
    sa.Column('error_message', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['charger_id'], ['chargers.id'], ),
    sa.ForeignKeyConstraint(['connector_id'], ['connectors.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('meter_values_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('meter_date', sa.DateTime(), nullable=True),
    sa.Column('value', sa.Float(), nullable=True),
    sa.Column('context', sa.String(length=100), nullable=True),
    sa.Column('format', sa.String(length=50), nullable=True),
    sa.Column('measurand', sa.String(length=100), nullable=True),
    sa.Column('phase', sa.String(length=50), nullable=True),
    sa.Column('unit', sa.String(length=20), nullable=True),
    sa.Column('transaction_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['transaction_id'], ['charge_transactions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('meter_values_logs')
    op.drop_table('log_ocpp_proxy_connection')
    op.drop_table('log_ocpp')
    op.drop_table('charge_transactions')
    op.drop_table('heartbeat_logs')
    op.drop_table('connectors')
    op.drop_table('partition_history')
    op.drop_index(op.f('ix_operators_username'), table_name='operators')
    op.drop_table('operators')
    op.drop_table('meter_values_15min_logs')
    op.drop_table('log_ocpp_duplicated_ids')
    op.drop_index(op.f('ix_chargers_code'), table_name='chargers')
    op.drop_table('chargers')
    # ### end Alembic commands ###
